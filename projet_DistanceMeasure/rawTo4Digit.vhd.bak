-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- PROGRAM		"Quartus II 64-Bit"
-- VERSION		"Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"
-- CREATED		"Thu Sep 17 08:46:34 2020"

LIBRARY ieee;
USE ieee.std_logic_1164.all; 
use ieee.numeric_std.all;

LIBRARY work;

ENTITY rawTo4Digit IS 
	PORT
	(
		RAW_VALUE_IN : in std_logic_vector;
		RAW_VALUE_IN : in std_logic_vector;
		RAW_VALUE_IN : in std_logic_vector;
		RAW_VALUE_IN : in std_logic_vector;
	);
END rawTo4Digit;

ARCHITECTURE Behavioral OF rawTo4Digit IS 

BEGIN 
ADC_CS_N <= enable;


	--When the signal "enable" is high the 12 bit reading is stored in the output signal "dato_out"
	process(ADC_SCLK)
		begin
			if rising_edge(ADC_SCLK) then
					if (enable = '1') then
						ADC_DOUT <= dato_temp(11 downto 0);
					end if;
			end if;

		end process;

END Behavioral;

